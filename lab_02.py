# -*- coding: utf-8 -*-
"""LAB_02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/2303a51707/2303a51707-APPLICATIONS-OF-DATA-MINING/blob/main/LAB_02.ipynb
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

dataset = pd.read_csv('dataset.csv')

print("Dataset Preview:")
print(dataset.head())

print("\nStatistical Summary:")
print(dataset.describe())

print("\nMissing Values:")
print(dataset.isnull().sum())

plt.figure(figsize=(10, 6))
for col in dataset.select_dtypes(include=['float64', 'int64']).columns:
    plt.plot(dataset[col], label=col)
plt.title('Line Plot')
plt.legend()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# ... (rest of your code) ...

plt.figure(figsize=(8, 6))
# Check if dataset has more than one column before creating scatter plot
if len(dataset.columns) > 1:
    sns.scatterplot(data=dataset, x=dataset.columns[0], y=dataset.columns[1])
    plt.title('Scatter Plot')
    plt.show()
else:
    print("Dataset has only one column. Cannot create scatter plot.")

plt.figure(figsize=(10, 6))
dataset.iloc[:, 0].value_counts().plot(kind='bar', color='skyblue')
plt.title('Bar Plot')
plt.xlabel('Categories')
plt.ylabel('Counts')
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Assuming your CSV file uses ';' as the delimiter
dataset = pd.read_csv('dataset.csv', delimiter=';')

# Now the rest of your code should work as expected
# ...

plt.figure(figsize=(10, 6))
# Selecting only numerical columns for the histogram
numerical_data = dataset.select_dtypes(include=['number'])
# Creating the histogram
numerical_data.hist(bins=20, figsize=(10, 6))
plt.tight_layout()
plt.show()

plt.figure(figsize=(8, 8))
dataset.iloc[:, 0].value_counts().plot(kind='pie', autopct='%1.1f%%')
plt.title('Pie Chart')
plt.ylabel('')
plt.show()

plt.figure(figsize=(10, 6))
correlation_matrix = dataset.corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Heatmap')
plt.show()